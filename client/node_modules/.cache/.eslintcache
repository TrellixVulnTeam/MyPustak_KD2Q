[{"E:\\Projects\\Instagram Clone\\server\\client\\src\\index.js":"1","E:\\Projects\\Instagram Clone\\server\\client\\src\\App.js":"2","E:\\Projects\\Instagram Clone\\server\\client\\src\\reportWebVitals.js":"3","E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\Navbar.js":"4","E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\Home.js":"5","E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\UserProfile.js":"6","E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\SubscribesUserProfile.js":"7","E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\Profile.js":"8","E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\CreatePost.js":"9","E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\Signin.js":"10","E:\\Projects\\Instagram Clone\\server\\client\\src\\reducers\\userReducer.js":"11","E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\Reset.js":"12","E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\Newpassword.js":"13","E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\Signup.js":"14","E:\\Projects\\Instagram Clone\\server\\client\\src\\dark-mode\\DarkModeToggle.js":"15","E:\\Projects\\Instagram Clone\\server\\client\\src\\dark-mode\\Toggle.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":2519,"mtime":1617126851780,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":3684,"mtime":1617131119648,"results":"21","hashOfConfig":"18"},{"size":7276,"mtime":1617139604954,"results":"22","hashOfConfig":"18"},{"size":5550,"mtime":1616953337726,"results":"23","hashOfConfig":"18"},{"size":7084,"mtime":1616623086302,"results":"24","hashOfConfig":"18"},{"size":4709,"mtime":1617142918337,"results":"25","hashOfConfig":"18"},{"size":3528,"mtime":1616953078751,"results":"26","hashOfConfig":"18"},{"size":4003,"mtime":1617144233065,"results":"27","hashOfConfig":"18"},{"size":684,"mtime":1616696248013,"results":"28","hashOfConfig":"18"},{"size":2072,"mtime":1617144301599,"results":"29","hashOfConfig":"18"},{"size":2433,"mtime":1617144384253,"results":"30","hashOfConfig":"18"},{"size":6150,"mtime":1617144266884,"results":"31","hashOfConfig":"18"},{"size":646,"mtime":1617139339468,"results":"32","hashOfConfig":"18"},{"size":147,"mtime":1617129345109,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"snf1pk",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\Instagram Clone\\server\\client\\src\\index.js",[],["71","72"],"E:\\Projects\\Instagram Clone\\server\\client\\src\\App.js",["73","74"],"import React, { useEffect, createContext, useContext, useReducer } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom';\nimport NavBar from './components/Navbar';\nimport Home from './components/screens/Home';\nimport Profile from './components/screens/Profile';\nimport Signin from './components/screens/Signin';\nimport Signup from './components/screens/Signup';\nimport CreatePost from './components/screens/CreatePost';\nimport UserProfile from './components/screens/UserProfile';\nimport SubscribesUserProfile from './components/screens/SubscribesUserProfile';\nimport Reset from './components/screens/Reset';\nimport NewPassword from './components/screens/Newpassword';\nimport { reducer, initialState } from './reducers/userReducer';\nimport './dark-mode/styles.scss';\n\nexport const UserContext = createContext()\n\nconst Routing = () => {\n\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n\n  //this is the first component which loads so we should redirect user to login and if user\n  //did not logout during last session then we have to update state\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    // console.log(typeof(user),user);\n    if (user) {\n      //we are updating the state if user did not logout and closed the browser\n      dispatch({ type: \"USER\", payload: user });\n    }\n    else {\n      if (!history.location.pathname.startsWith('/reset'))\n        history.push('/signin');\n    }\n  }, []);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/createPost\">\n        <CreatePost />\n      </Route>\n      <Route path=\"/profile/:userid\">\n        <UserProfile />\n      </Route>\n      <Route path=\"/myfollowingposts\">\n        <SubscribesUserProfile />\n      </Route>\n      <Route exact path=\"/reset-password\">\n        <Reset />\n      </Route>\n      <Route exact path=\"/reset-password/:token\">\n        <NewPassword />\n      </Route>\n    </Switch >\n  )\n}\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <NavBar />\n        <Routing />\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","E:\\Projects\\Instagram Clone\\server\\client\\src\\reportWebVitals.js",[],"E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\Navbar.js",[],"E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\Home.js",[],"E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\UserProfile.js",[],"E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\SubscribesUserProfile.js",[],"E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\Profile.js",[],"E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\CreatePost.js",[],"E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\Signin.js",["75","76"],"/* eslint-disable no-unused-vars */\r\nimport React, { useState, useContext, useRef } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport { UserContext } from '../../App'\r\n\r\nconst SignIn = () => {\r\n    //UserContext is used to maintain a state and update the state dispatch is used\r\n    const { state, dispatch } = useContext(UserContext);\r\n    //creating hooks\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    let showPasswordRef = useRef(null)\r\n    const history = useHistory();\r\n\r\n    const PostData = () => {\r\n\r\n        //email validation using regex\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"Invalid email id\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        //password validation using regex\r\n        if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(password)) {\r\n            M.toast({ html: \"Invalid password\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        fetch(\"/signin\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data);\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#e53935 red darken-1\" });\r\n                }\r\n                else {\r\n                    //saving details of user and token value in localstorage \r\n                    localStorage.setItem(\"jwt\", data.token);\r\n                    localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n                    //using dispatch to update the central state\r\n                    dispatch({ type: \"USER\", payload: data.user })\r\n                    M.toast({ html: \"Signedin successfully\", classes: \"#43a047 green darken-1\" });\r\n                    history.push('/')\r\n                }\r\n            });\r\n    }\r\n    const showPassword = () => {\r\n        // console.log(showPasswordRef.current.className);\r\n        showPasswordRef.current.attributes.type.value = \"text\";\r\n        // showPasswordRef.current.getElementsByClassName('password')[0].attributes.type.value = \"text\"\r\n    }\r\n    return (\r\n        <div className=\"card signin-card\">\r\n            <img className=\"logo-signin\" src=\"https://res.cloudinary.com/tushar-mittal1998/image/upload/v1617034645/Screenshot_270_cwwlbi.png\" alt=\"socially\" />\r\n            <input\r\n                type=\"text\"\r\n                className=\"placeicon\"\r\n                // &#xf0e0;\r\n                placeholder=\"Email\"\r\n                val={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <div className=\"password-field\">\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"placeicon\"\r\n                    // &#xf023;\r\n                    placeholder=\"Password\"\r\n                    val={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    ref={showPasswordRef}\r\n                />\r\n                <i className=\"fas fa-eye\"\r\n                    onClick={() => showPassword()}\r\n                ></i>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1\"\r\n                onClick={() => PostData()}\r\n            >\r\n                Sign In\r\n            </button>\r\n            <h5>\r\n                <Link to=\"/signup\">Don't have an account ?</Link>\r\n            </h5>\r\n            <p>\r\n                <Link to=\"/reset-password\">Forgot password ?</Link>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn","E:\\Projects\\Instagram Clone\\server\\client\\src\\reducers\\userReducer.js",[],"E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\Reset.js",["77","78"],"/* eslint-disable no-unused-vars */\r\nimport React, { useState, useContext, useRef } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst Reset = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    \r\n    const ResetPassword = () => {\r\n\r\n        //email validation using regex\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"Invalid email id\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        fetch(\"/reset-password\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                email\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#e53935 red darken-1\" });\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: \"#43a047 green darken-1\" });\r\n                    history.push('/signin')\r\n                }\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"card signin-card\">\r\n            <img className=\"logo-signin\" src=\"https://res.cloudinary.com/tushar-mittal1998/image/upload/v1617034645/Screenshot_270_cwwlbi.png\" alt=\"socially\" />\r\n            <input\r\n                type=\"text\"\r\n                className=\"placeicon\"\r\n                // &#xf0e0;\r\n                placeholder=\"Email\"\r\n                val={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <button className=\"btn reset-password waves-effect waves-light #42a5f5 blue darken-1\"\r\n                onClick={() => ResetPassword()}\r\n            >\r\n                Reset Password\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reset","E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\Newpassword.js",[],"E:\\Projects\\Instagram Clone\\server\\client\\src\\components\\screens\\Signup.js",["79","80"],"/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable react/style-prop-object */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState, useRef } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst Signup = () => {\r\n\r\n    //creating hooks\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [url, setUrl] = useState(undefined);\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    let inputRef = useRef(null)\r\n    let showPasswordRef = useRef(null)\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            uploadFields()\r\n        }\r\n    }, [url])\r\n\r\n    const uploadPic = () => {\r\n        //upload a file we need to create FormData()\r\n        const data = new FormData();\r\n        data.append(\"file\", image);\r\n        data.append(\"upload_preset\", \"insta-clone\");\r\n        data.append(\"cloud_name\", \"tushar-mittal1998\");\r\n        //1st network request for posting image to cloudinary\r\n        fetch(\"https://api.cloudinary.com/v1_1/tushar-mittal1998/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data.url);\r\n                setUrl(data.url);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const uploadFields = () => {\r\n        //email validation using regex\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"Invalid email id\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        //password validation using regex\r\n        if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(password)) {\r\n            M.toast({ html: \"Invalid password\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        fetch(\"/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic: url\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#e53935 red darken-1\" });\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: \"#43a047 green darken-1\" });\r\n                    history.push('/signin')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n\r\n    const PostData = () => {\r\n        if (image) {\r\n            uploadPic();\r\n        }\r\n        else {\r\n            uploadFields();\r\n        }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"init modal called\");\r\n    //     M.Modal.init(collapse.current);\r\n    //     // console.log(\"collapse \", collapse);\r\n    //     console.log(collapse.current);\r\n    // }, [])\r\n\r\n    const showPassword = () => {\r\n        // console.log(showPasswordRef.current);\r\n        showPasswordRef.current.attributes.type.value = \"text\";\r\n        // showPasswordRef.current.getElementsByClassName('password')[0].attributes.type.value = \"text\"\r\n    }\r\n    const fun = () => {\r\n        inputRef.current.classList.remove(\"hide\");\r\n    }\r\n    return (\r\n        <div className=\"card signin-card\">\r\n            <img className=\"logo-signin\" src=\"https://res.cloudinary.com/tushar-mittal1998/image/upload/v1617034645/Screenshot_270_cwwlbi.png\" alt=\"socially\" />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                val={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                className=\"placeicon\"\r\n                // &#xf0e0;\r\n                placeholder=\"Email\"\r\n                val={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <div className=\"password-field\">\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"placeicon password\"\r\n                    // &#xf023;\r\n                    placeholder=\"Password\"\r\n                    val={password}\r\n                    onChange={(e) => {\r\n                        setPassword(e.target.value);\r\n                        fun();\r\n                    }}\r\n                    ref={showPasswordRef}\r\n                />\r\n                <i className=\"fas fa-eye\"\r\n                    onClick={() => showPassword()}\r\n                ></i>\r\n            </div>\r\n            <div className=\"password-validation hide\" ref={inputRef}>\r\n                <p>Password must contain atleast 8 letters including</p>\r\n                <hr />\r\n                <p>1 capital letter(A-Z)</p>\r\n                <p>1 small letter(a-z)</p>\r\n                <p>1 special character</p>\r\n            </div>\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #42a5f5 blue darken-1\">\r\n                    <span>Upload profile pic</span>\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={(e) => setImage(e.target.files[0])}\r\n                    />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1\"\r\n                onClick={() => PostData()}\r\n            >\r\n                Create Account\r\n            </button>\r\n            <h5><Link to=\"/signin\">Already have an account ?</Link></h5>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default Signup","E:\\Projects\\Instagram Clone\\server\\client\\src\\dark-mode\\DarkModeToggle.js",[],"E:\\Projects\\Instagram Clone\\server\\client\\src\\dark-mode\\Toggle.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":22,"column":11,"nodeType":"87","messageId":"88","endLine":22,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":37,"column":6,"nodeType":"91","endLine":37,"endColumn":8,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":19,"column":24,"nodeType":"95","messageId":"96","endLine":19,"endColumn":25,"suggestions":"97"},{"ruleId":"93","severity":1,"message":"94","line":19,"column":49,"nodeType":"95","messageId":"96","endLine":19,"endColumn":50,"suggestions":"98"},{"ruleId":"93","severity":1,"message":"94","line":15,"column":24,"nodeType":"95","messageId":"96","endLine":15,"endColumn":25,"suggestions":"99"},{"ruleId":"93","severity":1,"message":"94","line":15,"column":49,"nodeType":"95","messageId":"96","endLine":15,"endColumn":50,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"94","line":52,"column":24,"nodeType":"95","messageId":"96","endLine":52,"endColumn":25,"suggestions":"101"},{"ruleId":"93","severity":1,"message":"94","line":52,"column":49,"nodeType":"95","messageId":"96","endLine":52,"endColumn":50,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["105"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["106","107"],["108","109"],["110","111"],["112","113"],["114","115"],["116","117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"messageId":"120","fix":"121","desc":"122"},{"messageId":"123","fix":"124","desc":"125"},{"messageId":"120","fix":"126","desc":"122"},{"messageId":"123","fix":"127","desc":"125"},{"messageId":"120","fix":"128","desc":"122"},{"messageId":"123","fix":"129","desc":"125"},{"messageId":"120","fix":"130","desc":"122"},{"messageId":"123","fix":"131","desc":"125"},{"messageId":"120","fix":"132","desc":"122"},{"messageId":"123","fix":"133","desc":"125"},{"messageId":"120","fix":"134","desc":"122"},{"messageId":"123","fix":"135","desc":"125"},"Update the dependencies array to be: [dispatch, history]",{"range":"136","text":"137"},"removeEscape",{"range":"138","text":"139"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"140","text":"141"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"142","text":"139"},{"range":"143","text":"141"},{"range":"144","text":"139"},{"range":"145","text":"141"},{"range":"146","text":"139"},{"range":"147","text":"141"},{"range":"148","text":"139"},{"range":"149","text":"141"},{"range":"150","text":"139"},{"range":"151","text":"141"},[1523,1525],"[dispatch, history]",[684,685],"",[684,684],"\\",[709,710],[709,709],[399,400],[399,399],[424,425],[424,424],[1603,1604],[1603,1603],[1628,1629],[1628,1628]]