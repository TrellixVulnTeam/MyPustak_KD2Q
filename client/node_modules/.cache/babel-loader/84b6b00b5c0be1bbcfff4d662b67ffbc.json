{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Instagram Clone\\\\client\\\\src\\\\components\\\\screens\\\\Home.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  //this data is to fetch all posts and store in data\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(\"./allposts\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      // console.log(result);\n      setData(result.posts);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card home-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: item.postedBy.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"post-image\",\n            src: item.photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"like-dislike\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              onClick: () => likePost(item._id),\n              children: \"thumb_up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              onClick: () => unlikePost(item._id),\n              children: \"thumb_down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item.likes.length, \" likes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"add a comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Home;\n\nconst likePost = id => {\n  fetch('/like', {\n    method: \"put\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n    },\n    //we are sending data to body so it will be recieved in req.body.postId\n    body: JSON.stringify({\n      postId: id\n    })\n  }).then(res => res.json()).then(result => {\n    // console.log(\"ye naya result hain\", result);\n    const newData = data.map(item => {\n      if (item._id == result._id) {}\n    });\n  }).catch(err => console.log(err));\n};\n\nconst unlikePost = id => {\n  fetch('/unlike', {\n    method: \"put\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n    },\n    body: JSON.stringify({\n      postId: id\n    })\n  }).then(res => res.json()).then(result => {\n    console.log(result);\n  }).catch(err => console.log(err));\n};\n\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["E:/Projects/Instagram Clone/client/src/components/screens/Home.js"],"names":["React","useState","useEffect","Home","data","setData","fetch","headers","localStorage","getItem","then","res","json","result","posts","map","item","postedBy","name","photo","likePost","_id","unlikePost","likes","length","title","body","id","method","JSON","stringify","postId","newData","catch","err","console","log"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst Home = () => {\r\n    //this data is to fetch all posts and store in data\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"./allposts\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result);\r\n                setData(result.posts);\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item => {\r\n                    return (\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            <h5>{item.postedBy.name}</h5>\r\n                            <div className=\"card-image\">\r\n                                <img className=\"post-image\" src={item.photo} />\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <div className=\"like-dislike\">\r\n                                    <i className=\"material-icons\" onClick={() => likePost(item._id)}>thumb_up</i>\r\n                                    <i className=\"material-icons\" onClick={() => unlikePost(item._id)}>thumb_down</i>\r\n                                    <span>{item.likes.length} likes</span>\r\n                                </div>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                <input type=\"text\" placeholder=\"add a comment\" />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div >\r\n    )\r\n};\r\nconst likePost = (id) => {\r\n    fetch('/like', {\r\n        method: \"put\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n        },\r\n        //we are sending data to body so it will be recieved in req.body.postId\r\n        body: JSON.stringify({\r\n            postId: id\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            // console.log(\"ye naya result hain\", result);\r\n            const newData = data.map(item => {\r\n                if (item._id == result._id) {\r\n                    \r\n                }\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nconst unlikePost = (id) => {\r\n    fetch('/unlike', {\r\n        method: \"put\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n        },\r\n        body: JSON.stringify({\r\n            postId: id\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            console.log(result);\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}