{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Instagram Clone\\\\client\\\\src\\\\components\\\\screens\\\\Home.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  //this data is to fetch all posts and store in data\n  const [data, setData] = useState([]);\n\n  const likePost = id => {\n    fetch('/like', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      //we are sending data to body so it will be recieved in req.body.postId\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(\"ye naya result hain\", result);\n      const newData = data.map(item => {\n        if (item._id === result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => console.log(err));\n  };\n\n  const unlikePost = id => {\n    fetch('/unlike', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n    });\n    const newData = data.map(item => {\n      if (item._id === result._id) {\n        return result;\n      } else {\n        return item;\n      }\n    });\n    setData(newData).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    fetch(\"./allposts\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      // console.log(result);\n      setData(result.posts);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card home-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: item.postedBy.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"post-image\",\n            src: item.photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"like-dislike\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              onClick: () => likePost(item._id),\n              children: \"thumb_up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              onClick: () => unlikePost(item._id),\n              children: \"thumb_down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item.likes.length, \" likes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"add a comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["E:/Projects/Instagram Clone/client/src/components/screens/Home.js"],"names":["React","useState","useEffect","Home","data","setData","likePost","id","fetch","method","headers","localStorage","getItem","body","JSON","stringify","postId","then","res","json","result","newData","map","item","_id","catch","err","console","log","unlikePost","posts","postedBy","name","photo","likes","length","title"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst Home = () => {\r\n    //this data is to fetch all posts and store in data\r\n    const [data, setData] = useState([]);\r\n\r\n    const likePost = (id) => {\r\n        fetch('/like', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            //we are sending data to body so it will be recieved in req.body.postId\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(\"ye naya result hain\", result);\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setData(newData);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                console.log(result);\r\n            })\r\n            const newData = data.map(item => {\r\n                if (item._id === result._id) {\r\n                    return result;\r\n                }\r\n                else {\r\n                    return item;\r\n                }\r\n            })\r\n        setData(newData)\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"./allposts\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result);\r\n                setData(result.posts);\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item => {\r\n                    return (\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            <h5>{item.postedBy.name}</h5>\r\n                            <div className=\"card-image\">\r\n                                <img className=\"post-image\" src={item.photo} />\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <div className=\"like-dislike\">\r\n                                    <i className=\"material-icons\" onClick={() => likePost(item._id)}>thumb_up</i>\r\n                                    <i className=\"material-icons\" onClick={() => unlikePost(item._id)}>thumb_down</i>\r\n                                    <span>{item.likes.length} likes</span>\r\n                                </div>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                <input type=\"text\" placeholder=\"add a comment\" />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}