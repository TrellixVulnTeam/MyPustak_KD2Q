{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable react/style-prop-object */\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport M from 'materialize-css';\n\nconst SignIn = () => {\n  _s();\n\n  //creating hooks\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [url, setUrl] = useState(undefined);\n  const [image, setImage] = useState(\"\");\n  const history = useHistory();\n\n  const uploadPic = () => {\n    //upload a file we need to create FormData()\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"insta-clone\");\n    data.append(\"cloud_name\", \"tushar-mittal1998\"); //1st network request for posting image to cloudinary\n\n    fetch(\"https://api.cloudinary.com/v1_1/tushar-mittal1998/image/upload\", {\n      method: \"post\",\n      body: data\n    }).then(res => res.json()).then(data => {\n      console.log(data.url);\n      setUrl(data.url);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const uploadFields = () => {\n    //email validation using regex\n    if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n      M.toast({\n        html: \"Invalid email id\",\n        classes: \"#e53935 red darken-1\"\n      });\n      return;\n    } //password validation using regex\n\n\n    if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(password)) {\n      M.toast({\n        html: \"Invalid password\",\n        classes: \"#e53935 red darken-1\"\n      });\n      return;\n    }\n\n    fetch(\"/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        password,\n        email\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data.error) {\n        M.toast({\n          html: data.error,\n          classes: \"#e53935 red darken-1\"\n        });\n      } else {\n        M.toast({\n          html: data.message,\n          classes: \"#43a047 green darken-1\"\n        });\n        history.push('/signin');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\n_s(SignIn, \"FF7GNmdG5FnR+/anlbgCY+2VKww=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignIn;\n\nconst PostData = () => {\n  if (image) {\n    uploadPic();\n  } else {\n    uploadFields();\n  }\n};\n\n_c2 = PostData;\nexport default SignIn;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignIn\");\n$RefreshReg$(_c2, \"PostData\");","map":{"version":3,"sources":["E:/Projects/Instagram Clone/client/src/components/screens/Signup.js"],"names":["React","useState","Link","useHistory","M","SignIn","name","setName","email","setEmail","password","setPassword","url","setUrl","undefined","image","setImage","history","uploadPic","data","FormData","append","fetch","method","body","then","res","json","console","log","catch","err","uploadFields","test","toast","html","classes","headers","JSON","stringify","error","message","push","PostData"],"mappings":"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","sourcesContent":["/* eslint-disable react/style-prop-object */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst SignIn = () => {\r\n\r\n    //creating hooks\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [url, setUrl] = useState(undefined);\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const uploadPic = () => {\r\n        //upload a file we need to create FormData()\r\n        const data = new FormData();\r\n        data.append(\"file\", image);\r\n        data.append(\"upload_preset\", \"insta-clone\");\r\n        data.append(\"cloud_name\", \"tushar-mittal1998\");\r\n        //1st network request for posting image to cloudinary\r\n        fetch(\"https://api.cloudinary.com/v1_1/tushar-mittal1998/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data.url);\r\n                setUrl(data.url);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const uploadFields = () => {\r\n        //email validation using regex\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"Invalid email id\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        //password validation using regex\r\n        if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(password)) {\r\n            M.toast({ html: \"Invalid password\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        fetch(\"/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#e53935 red darken-1\" });\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: \"#43a047 green darken-1\" });\r\n                    history.push('/signin')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    \r\n}\r\n\r\nconst PostData = () => {\r\n    if(image){\r\n        uploadPic();\r\n    }\r\n    else{\r\n        uploadFields();\r\n    }\r\n}\r\n\r\nexport default SignIn"]},"metadata":{},"sourceType":"module"}