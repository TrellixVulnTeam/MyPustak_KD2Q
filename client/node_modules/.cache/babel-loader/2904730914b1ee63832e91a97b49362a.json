{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Instagram Clone\\\\server\\\\client\\\\src\\\\components\\\\screens\\\\Signin.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport M from 'materialize-css';\nimport { UserContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  //UserContext is used to maintain a state and update the state dispatch is used\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext); //creating hooks\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const PostData = () => {\n    //email validation using regex\n    if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n      M.toast({\n        html: \"Invalid email id\",\n        classes: \"#e53935 red darken-1\"\n      });\n      return;\n    } //password validation using regex\n\n\n    if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(password)) {\n      M.toast({\n        html: \"Invalid password\",\n        classes: \"#e53935 red darken-1\"\n      });\n      return;\n    }\n\n    fetch(\"/signin\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(res => res.json()).then(data => {\n      // console.log(data);\n      if (data.error) {\n        M.toast({\n          html: data.error,\n          classes: \"#e53935 red darken-1\"\n        });\n      } else {\n        //saving details of user and token value in localstorage \n        localStorage.setItem(\"jwt\", data.token);\n        localStorage.setItem(\"user\", JSON.stringify(data.user)); //using dispatch to update the central state\n\n        dispatch({\n          type: \"USER\",\n          payload: data.user\n        });\n        M.toast({\n          html: \"Signedin successfully\",\n          classes: \"#43a047 green darken-1\"\n        });\n        history.push('/');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card input-field signin-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"logo-signin\",\n      src: \"https://res.cloudinary.com/tushar-mittal1998/image/upload/v1617034645/Screenshot_270_cwwlbi.png\",\n      alt: \"socially\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"placeicon\" // &#xf0e0;\n      ,\n      placeholder: \"Email\",\n      val: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"placeicon\" // &#xf023;\n      ,\n      placeholder: \"Password\",\n      val: password,\n      onChange: e => setPassword(e.target.value),\n      ref: showPasswordRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn waves-effect waves-light #42a5f5 blue darken-1\",\n      onClick: () => PostData(),\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Don't have an account ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/reset-password\",\n        children: \"Forgot password ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"2YpOEW4fgqNoPvi1p0Z2lhF7nPA=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["E:/Projects/Instagram Clone/server/client/src/components/screens/Signin.js"],"names":["React","useState","useContext","Link","useHistory","M","UserContext","SignIn","state","dispatch","email","setEmail","password","setPassword","history","PostData","test","toast","html","classes","fetch","method","headers","body","JSON","stringify","then","res","json","data","error","localStorage","setItem","token","user","type","payload","push","e","target","value","showPasswordRef"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport { UserContext } from '../../App'\r\n\r\nconst SignIn = () => {\r\n    //UserContext is used to maintain a state and update the state dispatch is used\r\n    const { state, dispatch } = useContext(UserContext);\r\n    //creating hooks\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const PostData = () => {\r\n\r\n        //email validation using regex\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"Invalid email id\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        //password validation using regex\r\n        if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(password)) {\r\n            M.toast({ html: \"Invalid password\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        fetch(\"/signin\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data);\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#e53935 red darken-1\" });\r\n                }\r\n                else {\r\n                    //saving details of user and token value in localstorage \r\n                    localStorage.setItem(\"jwt\", data.token);\r\n                    localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n                    //using dispatch to update the central state\r\n                    dispatch({ type: \"USER\", payload: data.user })\r\n                    M.toast({ html: \"Signedin successfully\", classes: \"#43a047 green darken-1\" });\r\n                    history.push('/')\r\n                }\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"card input-field signin-card\">\r\n            <img className=\"logo-signin\" src=\"https://res.cloudinary.com/tushar-mittal1998/image/upload/v1617034645/Screenshot_270_cwwlbi.png\" alt=\"socially\" />\r\n            <input\r\n                type=\"text\"\r\n                className=\"placeicon\"\r\n                // &#xf0e0;\r\n                placeholder=\"Email\"\r\n                val={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                className=\"placeicon\"\r\n                // &#xf023;\r\n                placeholder=\"Password\"\r\n                val={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                ref={showPasswordRef}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1\"\r\n                onClick={() => PostData()}\r\n            >\r\n                Sign In\r\n            </button>\r\n            <h5>\r\n                <Link to=\"/signup\">Don't have an account ?</Link>\r\n            </h5>\r\n            <p>\r\n                <Link to=\"/reset-password\">Forgot password ?</Link>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn"]},"metadata":{},"sourceType":"module"}