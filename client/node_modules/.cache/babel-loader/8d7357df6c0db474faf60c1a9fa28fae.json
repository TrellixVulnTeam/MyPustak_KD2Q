{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Instagram Clone\\\\client\\\\src\\\\components\\\\screens\\\\Signup.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport M from 'materialize-css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  //creating hooks\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const PostData = () => {\n    //email validation using regex\n    if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n      M.toast({\n        html: \"Invalid email id\",\n        classes: \"#e53935 red darken-1\"\n      });\n      return;\n    } //password validation using regex\n\n\n    if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(password)) {}\n\n    fetch(\"/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        password,\n        email\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        M.toast({\n          html: data.error,\n          classes: \"#e53935 red darken-1\"\n        });\n      } else {\n        M.toast({\n          html: data.message,\n          classes: \"#43a047 green darken-1\"\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card input-field\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Instagram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"name\",\n      val: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"email\",\n      val: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"password\",\n      val: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn waves-effect waves-light #42a5f5 blue darken-1\",\n      onClick: () => PostData(),\n      children: \"SignUp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signin\",\n        children: \"Already have an account ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"U1DCtFSIKcmCKgpSr3L7jOg/618=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["E:/Projects/Instagram Clone/client/src/components/screens/Signup.js"],"names":["React","useState","Link","M","SignIn","name","setName","email","setEmail","password","setPassword","PostData","test","toast","html","classes","fetch","method","headers","body","JSON","stringify","then","res","json","data","error","message","e","target","value"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst SignIn = () => {\r\n\r\n    //creating hooks\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const PostData = () => {\r\n\r\n        //email validation using regex\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"Invalid email id\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        //password validation using regex\r\n        if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(password)){\r\n            \r\n        }\r\n        fetch(\"/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#e53935 red darken-1\" });\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: \"#43a047 green darken-1\" });\r\n\r\n                }\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"card input-field\">\r\n            <h2>Instagram</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"name\"\r\n                val={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"email\"\r\n                val={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"password\"\r\n                val={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1\"\r\n                onClick={() => PostData()}\r\n            >\r\n                SignUp\r\n            </button>\r\n            <h5><Link to=\"/signin\">Already have an account ?</Link></h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn"]},"metadata":{},"sourceType":"module"}