{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Instagram Clone\\\\client\\\\src\\\\components\\\\screens\\\\Profile.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const [mypics, setPics] = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [image, setImage] = useState(\"\"); // const [url, setUrl] = useState(\"\");\n\n  useEffect(() => {\n    fetch('/myposts', {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      // console.log(result);\n      setPics(result.myPost);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"IN USE EFFECT BEFORE\");\n\n    if (image) {\n      console.log(\"IN USE EFFECT AFTER\"); //upload a file we need to create FormData()\n\n      const data = new FormData();\n      data.append(\"file\", image);\n      data.append(\"upload_preset\", \"insta-clone\");\n      data.append(\"cloud_name\", \"tushar-mittal1998\"); //1st network request for posting image to cloudinary\n\n      fetch(\"https://api.cloudinary.com/v1_1/tushar-mittal1998/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        // console.log(data.url);\n        // setUrl(data.url);\n        // localStorage.setItem(\"user\", JSON.stringify({ ...state, pic: data.url }));\n        // dispatch({ type: \"UPDATEPIC\", payload: data.url });\n        fetch('/updatepic', {\n          method: \"put\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n          },\n          body: JSON.stringify({\n            pic: data.url\n          })\n        }).then(res => res.json()).then(result => {\n          console.log(\"ye naya bharat hain\", result);\n          localStorage.setItem(\"user\", JSON.stringify({ ...state,\n            pic: result.pic\n          }));\n          dispatch({\n            type: \"UPDATEPIC\",\n            payload: result.url\n          });\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [image]);\n\n  const updatePic = file => {\n    console.log(\"IN UPDATE PIC FUNCTION\");\n    setImage(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-top-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"profile-image\",\n            src: state ? state.pic : \"loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-field input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn #42a5f5 blue darken-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Upload profile pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: e => updatePic(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-path-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"file-path validate\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: state ? state.name : \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: state ? state.email : \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [mypics.length, \" posts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [state ? state.followers.length : \"0\", \" followers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [state ? state.following.length : \"0\", \" following\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: mypics.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"item\",\n          src: item.photo,\n          alt: item.title\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"rHZQLNBMpN3f7lHuzj2Mel3JXZ4=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["E:/Projects/Instagram Clone/client/src/components/screens/Profile.js"],"names":["React","useContext","useEffect","useState","UserContext","Profile","mypics","setPics","state","dispatch","image","setImage","fetch","headers","localStorage","getItem","then","res","json","result","myPost","console","log","data","FormData","append","method","body","JSON","stringify","pic","url","setItem","type","payload","catch","err","updatePic","file","e","target","files","name","email","length","followers","following","map","item","photo","title","_id"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { UserContext } from '../../App';\r\n\r\nconst Profile = () => {\r\n\r\n    const [mypics, setPics] = useState([]);\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const [image, setImage] = useState(\"\");\r\n    // const [url, setUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch('/myposts', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result);\r\n                setPics(result.myPost)\r\n            })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"IN USE EFFECT BEFORE\");\r\n        if (image) {\r\n            console.log(\"IN USE EFFECT AFTER\");\r\n            //upload a file we need to create FormData()\r\n            const data = new FormData();\r\n            data.append(\"file\", image);\r\n            data.append(\"upload_preset\", \"insta-clone\");\r\n            data.append(\"cloud_name\", \"tushar-mittal1998\");\r\n            //1st network request for posting image to cloudinary\r\n            fetch(\"https://api.cloudinary.com/v1_1/tushar-mittal1998/image/upload\", {\r\n                method: \"post\",\r\n                body: data\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    // console.log(data.url);\r\n                    // setUrl(data.url);\r\n                    // localStorage.setItem(\"user\", JSON.stringify({ ...state, pic: data.url }));\r\n                    // dispatch({ type: \"UPDATEPIC\", payload: data.url });\r\n                    fetch('/updatepic', {\r\n                        method: \"put\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                        },\r\n                        body: JSON.stringify({\r\n                            pic: data.url\r\n                        })\r\n                    }).then(res => res.json()).then(result => {\r\n                        console.log(\"ye naya bharat hain\", result);\r\n                        localStorage.setItem(\"user\", JSON.stringify({ ...state, pic: result.pic }))\r\n                        dispatch({ type: \"UPDATEPIC\", payload: result.url });\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [image]);\r\n\r\n    const updatePic = (file) => {\r\n        console.log(\"IN UPDATE PIC FUNCTION\");\r\n        setImage(file);\r\n    }\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile-top-container\">\r\n                <div>\r\n                    <div>\r\n                        <img className=\"profile-image\"\r\n                            src={state ? state.pic : \"loading\"}\r\n                        />\r\n                    </div>\r\n                    <div className=\"file-field input-field\">\r\n                        <div className=\"btn #42a5f5 blue darken-1\">\r\n                            <span>Upload profile pic</span>\r\n                            <input\r\n                                type=\"file\"\r\n                                onChange={(e) => updatePic(e.target.files[0])}\r\n                            />\r\n                        </div>\r\n                        <div className=\"file-path-wrapper\">\r\n                            <input className=\"file-path validate\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h4>{state ? state.name : \"loading\"}</h4>\r\n                    <h5>{state ? state.email : \"loading\"}</h5>\r\n                    <div className=\"profile-data\">\r\n                        <h6>{mypics.length} posts</h6>\r\n                        <h6>{state ? state.followers.length : \"0\"} followers</h6>\r\n                        <h6>{state ? state.following.length : \"0\"} following</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"gallery\">\r\n                {\r\n                    mypics.map(item => {\r\n                        return (\r\n                            <img className=\"item\" src={item.photo} alt={item.title} key={item._id} />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile"]},"metadata":{},"sourceType":"module"}