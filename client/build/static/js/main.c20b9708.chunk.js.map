{"version":3,"sources":["components/Navbar.js","components/screens/Home.js","components/screens/Profile.js","components/screens/Signin.js","components/screens/Signup.js","components/screens/CreatePost.js","components/screens/UserProfile.js","components/screens/SubscribesUserProfile.js","reducers/userReducer.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","history","useHistory","useContext","UserContext","state","dispatch","className","to","id","onClick","localStorage","clear","type","push","Home","useState","data","setData","useEffect","fetch","headers","getItem","then","res","json","result","posts","map","item","postedBy","_id","name","postid","method","newData","filter","catch","err","console","log","src","photo","likes","includes","body","JSON","stringify","postId","length","title","comments","record","text","onSubmit","e","preventDefault","target","value","placeholder","Profile","mypics","setPics","image","setImage","myPost","FormData","append","pic","url","setItem","payload","onChange","file","files","email","followers","following","alt","SignIn","setEmail","password","setPassword","val","test","error","M","toast","html","classes","token","user","setName","undefined","setUrl","uploadFields","message","PostData","uploadPic","CreatePost","setTitle","setBody","postDetails","userProfile","setProfile","userid","useParams","showFollow","setShowFollow","followId","prevState","unfollowId","newFollower","class","SubscribesUserProfile","reducer","action","createContext","Routing","parse","exact","path","Signin","Signup","UserProfile","App","useReducer","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c20b9708.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { UserContext } from '../App'\r\n\r\nconst NavBar = () => {\r\n\r\n  const history = useHistory();\r\n  const { state, dispatch } = useContext(UserContext);\r\n\r\n  const renderList = () => {\r\n    if (state) {\r\n      return [\r\n        <li key={1}><Link to=\"/createPost\">CreatePost</Link></li>,\r\n        <li key={2}><Link to=\"/profile\">Profile</Link></li>,\r\n        <li key={3}><Link to=\"/myfollowingposts\">My following posts</Link></li>,\r\n        <li key={4}>\r\n          <button className=\"btn #d32f2f red darken-2 logout\"\r\n            onClick={() => {\r\n              //clearing the local storage\r\n              localStorage.clear();\r\n              //changing the global state\r\n              dispatch({ type: \"CLEAR\" });\r\n              history.push('./signin');\r\n            }}\r\n          >\r\n            Logout\r\n            </button>\r\n        </li>\r\n      ]\r\n    }\r\n    else {\r\n      return [\r\n        <li key={5}><Link to=\"/signin\">SignIn</Link></li>,\r\n        <li key={6}><Link to=\"/signup\">SignUp</Link></li>\r\n      ]\r\n    }\r\n  }\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper white\">\r\n        <Link to={state ? \"/\" : \"/signin\"} className=\"brand-logo left\">Instagram</Link>\r\n        <ul id=\"nav-mobile\" className=\"right\">\r\n          {renderList()}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\n\r\nexport default NavBar","/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { UserContext } from '../../App';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    //this data is to fetch all posts and store in data\r\n    const [data, setData] = useState([]);\r\n    const { state, dispatch } = useContext(UserContext);\r\n\r\n    const likePost = (id) => {\r\n        fetch('/like', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            //we are sending data to body so it will be recieved in req.body.postId\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(\"ye naya result hain\", result);\r\n                // A re-render can only be triggered if a component's state has changed\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setData(newData);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(\"ye naya result hain\", result);\r\n                // A re-render can only be triggered if a component's state has changed\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setData(newData);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    const makeComment = (text, postId) => {\r\n        fetch('/comment', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                console.log(\"ye naya result hain\", result);\r\n                // A re-render can only be triggered if a component's state has changed\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setData(newData);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    const deletePost = (postid) => {\r\n        fetch('/deletePost/' + postid, {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result);\r\n                const newData = data.filter(item => {\r\n                    return item._id !== result._id;\r\n                })\r\n                setData(newData);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"./allposts\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result);\r\n                setData(result.posts);\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item => {\r\n                    return (\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            <h5>\r\n                                <Link to={item.postedBy._id !== state._id ? \"/profile/\" + item.postedBy._id : \"/profile\"}>{item.postedBy.name}</Link>\r\n                                {\r\n                                    item.postedBy._id === state._id &&\r\n                                    <i className=\"material-icons deletePostIcon\"\r\n                                        onClick={() => deletePost(item._id)}>\r\n                                        delete\r\n                                    </i>\r\n                                }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img className=\"post-image\" src={item.photo} />\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <div className=\"like-dislike\">\r\n                                    {\r\n                                        item.likes.includes(state._id) ?\r\n                                            <i className=\"material-icons\" onClick={() => unlikePost(item._id)}>thumb_down</i>\r\n                                            :\r\n                                            <i className=\"material-icons\" onClick={() => likePost(item._id)}>thumb_up</i>\r\n                                    }\r\n                                    <span>{item.likes.length} likes</span>\r\n                                </div>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record => {\r\n                                        return (\r\n                                            <h6 key={record._id} ><span className=\"comment-name\">{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e) => {\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value, item._id)\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"add a comment\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default Home","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { UserContext } from '../../App';\r\n\r\nconst Profile = () => {\r\n\r\n    const [mypics, setPics] = useState([]);\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch('/myposts', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setPics(result.myPost)\r\n            })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (image) {\r\n            //upload a file we need to create FormData()\r\n            const data = new FormData();\r\n            data.append(\"file\", image);\r\n            data.append(\"upload_preset\", \"insta-clone\");\r\n            data.append(\"cloud_name\", \"tushar-mittal1998\");\r\n            //1st network request for posting image to cloudinary\r\n            fetch(\"https://api.cloudinary.com/v1_1/tushar-mittal1998/image/upload\", {\r\n                method: \"post\",\r\n                body: data\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    // localStorage.setItem(\"user\", JSON.stringify({ ...state, pic: data.url }));\r\n                    // dispatch({ type: \"UPDATEPIC\", payload: data.url });\r\n                    fetch('/updatepic', {\r\n                        method: \"put\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                        },\r\n                        body: JSON.stringify({\r\n                            pic: data.url\r\n                        })\r\n                    }).then(res => res.json()).then(result => {\r\n                        console.log(\"ye naya bharat hain\", result);\r\n                        localStorage.setItem(\"user\", JSON.stringify({ ...state, pic: result.pic }))\r\n                        dispatch({ type: \"UPDATEPIC\", payload: result.pic });\r\n                        // window.location.reload();\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [image]);\r\n\r\n    const updatePic = (file) => {\r\n        setImage(file);\r\n    }\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile-top-container\">\r\n                <div>\r\n                    <div>\r\n                        <img className=\"profile-image\"\r\n                            src={state ? state.pic : \"loading\"}\r\n                        />\r\n                    </div>\r\n                    <div className=\"file-field input-field\">\r\n                        <div className=\"btn #42a5f5 blue darken-1\">\r\n                            <span>Upload profile pic</span>\r\n                            <input\r\n                                type=\"file\"\r\n                                onChange={(e) => updatePic(e.target.files[0])}\r\n                            />\r\n                        </div>\r\n                        <div className=\"file-path-wrapper\">\r\n                            <input className=\"file-path validate\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h4>{state ? state.name : \"loading\"}</h4>\r\n                    <h5>{state ? state.email : \"loading\"}</h5>\r\n                    <div className=\"profile-data\">\r\n                        <h6>{mypics.length} posts</h6>\r\n                        <h6>{state ? state.followers.length : \"0\"} followers</h6>\r\n                        <h6>{state ? state.following.length : \"0\"} following</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"gallery\">\r\n                {\r\n                    mypics.map(item => {\r\n                        return (\r\n                            <img className=\"item\" src={item.photo} alt={item.title} key={item._id} />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport { UserContext } from '../../App'\r\n\r\nconst SignIn = () => {\r\n    //UserContext is used to maintain a state and update the state dispatch is used\r\n    const { state, dispatch } = useContext(UserContext);\r\n    //creating hooks\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const PostData = () => {\r\n\r\n        //email validation using regex\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"Invalid email id\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        //password validation using regex\r\n        if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(password)) {\r\n            M.toast({ html: \"Invalid password\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        fetch(\"/signin\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#e53935 red darken-1\" });\r\n                }\r\n                else {\r\n                    //saving details of user and token value in localstorage \r\n                    localStorage.setItem(\"jwt\", data.token);\r\n                    localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n                    //using dispatch to update the central state\r\n                    dispatch({ type: \"USER\", payload: data.user })\r\n                    M.toast({ html: \"Signedin successfully\", classes: \"#43a047 green darken-1\" });\r\n                    history.push('/')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"card input-field\">\r\n            <h2 className=\"form-heading\">Instagram</h2>\r\n            <input\r\n                type=\"text\"\r\n                className=\"placeicon\"\r\n                placeholder=\"&#xf0e0; Email\"\r\n                val={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                className=\"placeicon\"\r\n                placeholder=\"&#xf023; Password\"\r\n                val={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1\"\r\n                onClick={() => PostData()}\r\n            >\r\n                Sign In\r\n            </button>\r\n            <h5>\r\n                <Link to=\"/signup\">Don't have an account ?</Link>\r\n            </h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn","/* eslint-disable react/style-prop-object */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst SignIn = () => {\r\n\r\n    //creating hooks\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [url, setUrl] = useState(undefined);\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const uploadPic = () => {\r\n        //upload a file we need to create FormData()\r\n        const data = new FormData();\r\n        data.append(\"file\", image);\r\n        data.append(\"upload_preset\", \"insta-clone\");\r\n        data.append(\"cloud_name\", \"tushar-mittal1998\");\r\n        //1st network request for posting image to cloudinary\r\n        fetch(\"https://api.cloudinary.com/v1_1/tushar-mittal1998/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data.url);\r\n                setUrl(data.url);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const uploadFields = () => {\r\n        //email validation using regex\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"Invalid email id\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        //password validation using regex\r\n        if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(password)) {\r\n            M.toast({ html: \"Invalid password\", classes: \"#e53935 red darken-1\" });\r\n            return;\r\n        }\r\n        fetch(\"/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic: url\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#e53935 red darken-1\" });\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: \"#43a047 green darken-1\" });\r\n                    history.push('/signin')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n\r\n    const PostData = () => {\r\n        if (image) {\r\n            uploadPic();\r\n        }\r\n        else {\r\n            uploadFields();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            uploadFields();\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"card input-field\">\r\n            <h2 className=\"form-heading\">Instagram</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                val={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                className=\"placeicon\"\r\n                placeholder=\"&#xf0e0; Email\"\r\n                val={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                className=\"placeicon\"\r\n                placeholder=\"&#xf023; Password\"\r\n                val={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <div className=\"password-validation\">\r\n                <p>Password must contain atleast</p>\r\n                <hr />\r\n                <p>1 capital letter(A-Z)</p>\r\n                <p>1 small letter(a-z)</p>\r\n                <p>1 special character</p>\r\n                <p>8 letters</p>\r\n            </div>\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #42a5f5 blue darken-1\">\r\n                    <span>Upload profile pic</span>\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={(e) => setImage(e.target.files[0])}\r\n                    />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1\"\r\n                onClick={() => PostData()}\r\n            >\r\n                Create Account\r\n            </button>\r\n            <h5><Link to=\"/signin\">Already have an account ?</Link></h5>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default SignIn","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst CreatePost = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n        if (url) {\r\n            //2nd network request for creating post to /createpost route \r\n            fetch(\"/createpost\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic: url\r\n                })\r\n            }).then(res => res.json())\r\n                .then(data => {\r\n                    if (data.error) {\r\n                        M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                    }\r\n                    else {\r\n                        M.toast({ html: \"Created post Successfully\", classes: \"#43a047 green darken-1\" })\r\n                        // history.push('/')\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                });\r\n        }\r\n    }, [url]);\r\n\r\n    const postDetails = () => {\r\n        //upload a file we need to create FormData()\r\n        const data = new FormData();\r\n        data.append(\"file\", image);\r\n        data.append(\"upload_preset\", \"insta-clone\");\r\n        data.append(\"cloud_name\", \"tushar-mittal1998\");\r\n        //1st network request for posting image to cloudinary\r\n        fetch(\"https://api.cloudinary.com/v1_1/tushar-mittal1998/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data.url);\r\n                setUrl(data.url);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"card input-field create-post\">\r\n\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Body\"\r\n                value={body}\r\n                onChange={(e) => setBody(e.target.value)}\r\n            />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #42a5f5 blue darken-1\">\r\n                    <span>Upload image</span>\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={(e) => setImage(e.target.files[0])}\r\n                    />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1\"\r\n                onClick={() => postDetails()}\r\n            >\r\n                Create Post\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { UserContext } from '../../App';\r\n\r\nconst Profile = () => {\r\n    const [userProfile, setProfile] = useState(null);\r\n\r\n    const { userid } = useParams();\r\n    const { state, dispatch } = useContext(UserContext);\r\n\r\n    const [showFollow, setShowFollow] = useState(state ? !state.following.includes(userid) : true);\r\n\r\n    useEffect(() => {\r\n        fetch('/user/' + userid, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result);\r\n                setProfile(result);\r\n            })\r\n    }, []);\r\n\r\n    const followUser = () => {\r\n        fetch('/follow', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                followId: userid\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n\r\n                dispatch({ type: \"UPDATE\", payload: { following: data.following, followers: data.followers } })\r\n                localStorage.setItem(\"user\", JSON.stringify(data))\r\n                setProfile((prevState) => {\r\n                    return {\r\n                        ...prevState,\r\n                        user: {\r\n                            ...prevState.user,\r\n                            followers: [...prevState.user.followers, data._id]\r\n                        }\r\n                    }\r\n                })\r\n                setShowFollow(false)\r\n            })\r\n    }\r\n\r\n    const unfollowUser = () => {\r\n        fetch('/unfollow', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                unfollowId: userid\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n\r\n                dispatch({ type: \"UPDATE\", payload: { following: data.following, followers: data.followers } })\r\n                localStorage.setItem(\"user\", JSON.stringify(data))\r\n\r\n                setProfile((prevState) => {\r\n                    const newFollower = prevState.user.followers.filter(item => item != data._id)\r\n                    return {\r\n                        ...prevState,\r\n                        user: {\r\n                            ...prevState.user,\r\n                            followers: newFollower\r\n                        }\r\n                    }\r\n                })\r\n                setShowFollow(true)\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                userProfile ?\r\n                    <div className=\"profile\">\r\n                        <div className=\"profile-top-container\">\r\n                            <div>\r\n                                <img className=\"profile-image\"\r\n                                    src={userProfile.user.pic}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <h4>{userProfile.user.name}</h4>\r\n                                <h6>{userProfile.user.email}</h6>\r\n                                <div className=\"profile-data\">\r\n                                    <h6>{userProfile.posts.length} posts</h6>\r\n                                    <h6>{userProfile.user.followers.length} followers</h6>\r\n                                    <h6>{userProfile.user.following.length} following</h6>\r\n                                </div>\r\n                                {\r\n                                    showFollow ?\r\n                                        <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1\"\r\n                                            onClick={() => followUser()}\r\n                                        >\r\n                                            FOLLOW\r\n                                        </button>\r\n                                        :\r\n                                        <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1\"\r\n                                            onClick={() => unfollowUser()}\r\n                                        >\r\n                                            UNFOLLOW\r\n                                        </button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"gallery\">\r\n                            {\r\n                                userProfile.posts.map(item => {\r\n                                    return (\r\n                                        <img className=\"item\" src={item.photo} alt={item.title} key={item._id} />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div class=\"progress\">\r\n                        <div class=\"indeterminate\"></div>\r\n                    </div>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { UserContext } from '../../App';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SubscribesUserProfile = () => {\r\n    //this data is to fetch all posts and store in data\r\n    const [data, setData] = useState([]);\r\n    const { state, dispatch } = useContext(UserContext);\r\n\r\n    const likePost = (id) => {\r\n        fetch('/like', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            //we are sending data to body so it will be recieved in req.body.postId\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(\"ye naya result hain\", result);\r\n                // A re-render can only be triggered if a component's state has changed\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setData(newData);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(\"ye naya result hain\", result);\r\n                // A re-render can only be triggered if a component's state has changed\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setData(newData);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    const makeComment = (text, postId) => {\r\n        fetch('/comment', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                console.log(\"ye naya result hain\", result);\r\n                // A re-render can only be triggered if a component's state has changed\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setData(newData);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    const deletePost = (postid) => {\r\n        fetch('/deletePost/' + postid, {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result);\r\n                const newData = data.filter(item => {\r\n                    return item._id !== result._id;\r\n                })\r\n                setData(newData);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"/getsubpost\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result);\r\n                setData(result.posts);\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item => {\r\n                    return (\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            <h5>\r\n                                <Link to={item.postedBy._id !== state._id ? \"/profile/\" + item.postedBy._id : \"/profile\"}>{item.postedBy.name}</Link>\r\n                                {\r\n                                    item.postedBy._id === state._id &&\r\n                                    <i className=\"material-icons deletePostIcon\"\r\n                                        onClick={() => deletePost(item._id)}>\r\n                                        delete\r\n                                    </i>\r\n                                }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img className=\"post-image\" src={item.photo} />\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <div className=\"like-dislike\">\r\n                                    {\r\n                                        item.likes.includes(state._id) ?\r\n                                            <i className=\"material-icons\" onClick={() => unlikePost(item._id)}>thumb_down</i>\r\n                                            :\r\n                                            <i className=\"material-icons\" onClick={() => likePost(item._id)}>thumb_up</i>\r\n                                    }\r\n                                    <span>{item.likes.length} likes</span>\r\n                                </div>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record => {\r\n                                        return (\r\n                                            <h6 key={record._id} ><span className=\"comment-name\">{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e) => {\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value, item._id)\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"add a comment\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default SubscribesUserProfile","/* eslint-disable eqeqeq */\r\n\r\n//initially we dont't have any data related to user\r\nexport const initialState = null;\r\n\r\nexport const reducer = (state, action) => {\r\n\r\n    if (action.type === \"USER\") {\r\n        return action.payload;\r\n    }\r\n    if (action.type === \"CLEAR\") {\r\n        return null;\r\n    }\r\n    if (action.type === \"UPDATE\") {\r\n        return {\r\n            ...state,//expanding the previous state\r\n            followers: action.payload.followers,\r\n            following: action.payload.following\r\n        }\r\n    }\r\n    if (action.type === \"UPDATEPIC\") {\r\n        return {\r\n            ...state,\r\n            pic: action.payload\r\n        }\r\n    }\r\n    return state;\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, createContext, useContext, useReducer } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom';\nimport NavBar from './components/Navbar';\nimport Home from './components/screens/Home';\nimport Profile from './components/screens/Profile';\nimport Signin from './components/screens/Signin';\nimport Signup from './components/screens/Signup';\nimport CreatePost from './components/screens/CreatePost';\nimport UserProfile from './components/screens/UserProfile';\nimport SubscribesUserProfile from './components/screens/SubscribesUserProfile';\nimport { reducer, initialState } from './reducers/userReducer';\n\nexport const UserContext = createContext();\n\nconst Routing = () => {\n\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n\n  //this is the first component which loads so we should redirect user to login and if user\n  //did not logout during last session then we have to update state\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    // console.log(typeof(user),user);\n    if (user) {\n      //we are updating the state if user did not logout and closed the browser\n      dispatch({ type: \"USER\", payload: user });\n    }\n    else {\n      history.push('/signin');\n    }\n  }, []);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/createPost\">\n        <CreatePost />\n      </Route>\n      <Route path=\"/profile/:userid\">\n        <UserProfile />\n      </Route>\n      <Route path=\"/myfollowingposts\">\n        <SubscribesUserProfile />\n      </Route>\n    </Switch>\n  )\n}\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <NavBar />\n        <Routing />\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}